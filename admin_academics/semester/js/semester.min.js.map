{"version":3,"sources":["admin_academics/semester/js/semester.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","thisYear","Date","getFullYear","lastYear","sessionValidation","callback","value","regExp","exec","start","parseInt","end","startDiff","Math","abs","endDiff","message","$","document","body","on","click","$el","this","$fieldSet","closest","find","$formControls","not","$semesterBtn","data","resetForm","is","each","prop","removeClass","addClass","attr","show","hide","twoMostRecentSessions","JSON","parse","text","autocomplete","$form","formValidation","fields","current_semester[session]","validators","current_semester[session_id]","excluded","notEmpty","evt","target","val","new_semester[session]","new_semester[session_id]","$tr","trBgColor","next","css","siblings","String","number","moment","start_date","date","format","end_date","sessionSemesterAutoComplete","source","fieldToDisplay","minLength","select","ui","$related","item","originalEvent","which","window","setTimeout"],"mappings":"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","file":"admin_academics/semester/js/semester.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint camelcase:false*/\n\n\t\"use strict\";\n\n\tvar\n\t  thisYear = new Date().getFullYear(),\n\t  lastYear = thisYear - 1;\n\n\tvar sessionValidation = {\n\t  callback: function(value) {\n\t    var regExp = /^(\\d{4})\\/(\\d{4})$/.exec(value);\n\n\t    if (regExp) {\n\t      var\n\t        start = parseInt(regExp[1]),\n\t        end = parseInt(regExp[2]);\n\n\t      if ((end - start) === 1) {\n\t        var\n\t          thisYear = new Date().getFullYear(),\n\t          startDiff = Math.abs(start - thisYear),\n\t          endDiff = Math.abs(end - thisYear);\n\n\t        return startDiff < 3 && endDiff < 3;\n\t      }\n\t    }\n\t    return false;\n\t  },\n\n\t  message: 'Please match pattern e.g ' + lastYear + '/' + thisYear\n\t};\n\n\t$(document.body).on(\n\t  {\n\t    'click': function() {\n\t      var $el = $(this),\n\t        $fieldSet = $el.closest('.current-semester-panel').find('fieldset'),\n\t        $formControls = $fieldSet.find('.form-control').not('#current-semester-session'),\n\t        $semesterBtn = $('.current-semester-form-btn');\n\n\t      $fieldSet.closest('.current-semester-form').data('formValidation').resetForm();\n\n\t      if ($el.is('.glyphicon-edit')) {\n\t        $formControls.each(function() {\n\t                             $(this).prop('disabled', false);\n\t                           }\n\t        );\n\n\t        $el\n\t          .removeClass('glyphicon-edit')\n\t          .addClass('glyphicon-eye-open')\n\t          .attr('title', 'View only');\n\n\t        $semesterBtn.show();\n\n\t      } else {\n\n\t        $formControls.each(function() {\n\t                             $(this).prop('disabled', true);\n\t                           }\n\t        );\n\n\t        $el\n\t          .removeClass('glyphicon-eye-open')\n\t          .addClass('glyphicon-edit')\n\t          .attr('title', 'Edit semester');\n\n\t        $semesterBtn.hide();\n\t      }\n\t    }\n\t  }, '.current-semester-edit-trigger'\n\t);\n\n\tvar twoMostRecentSessions = JSON.parse($('#two-most-recent-sessions').text());\n\n\t$('.semester-session').autocomplete(__webpack_require__(1)(\n\t  twoMostRecentSessions, 'session'\n\t));\n\n\t(function currentSemesterForm() {\n\t  var $form = $('.current-semester-form').formValidation(\n\t    {\n\t      fields: {\n\t        'current_semester[session]': {\n\t          validators: {\n\t            callback: {\n\t              callback: sessionValidation.callback,\n\t              message: sessionValidation.message\n\t            }\n\t          }\n\t        },\n\n\t        'current_semester[session_id]': {\n\t          excluded: false,\n\t          validators: {\n\t            notEmpty: {message: 'You may only pick from the drop down list'}\n\t          }\n\t        }\n\t      }\n\t    }\n\t  );\n\n\t  $form.on('err.field.fv', '#current-semester-session', function(evt) {\n\t             $form.formValidation('revalidateField', $($(evt.target).data('related-input-id')).val(''));\n\t           }\n\t  );\n\n\t})();\n\n\t(function newSemesterForm() {\n\t  var $form = $('.new-semester-form').formValidation(\n\t    {\n\t      fields: {\n\t        'new_semester[session]': {\n\t          validators: {\n\t            callback: {\n\t              callback: sessionValidation.callback,\n\t              message: sessionValidation.message\n\t            }\n\t          }\n\t        },\n\n\t        'new_semester[session_id]': {\n\t          excluded: false,\n\t          validators: {\n\t            notEmpty: {message: 'You may only pick from the drop down list'}\n\t          }\n\t        }\n\t      }\n\t    }\n\t  );\n\n\t  $form.on('err.field.fv', '#new-semester-session', function(evt) {\n\t             $form.formValidation('revalidateField', $($(evt.target).data('related-input-id')).val(''));\n\t           }\n\t  );\n\t})();\n\n\t(function currentSemesterSelectUpdate() {\n\t  var $form = $('.current-semester-select-update-form').formValidation(\n\t    {\n\t      fields: {\n\t        'current_semester[session]': {\n\t          validators: {\n\t            callback: {\n\t              callback: sessionValidation.callback,\n\t              message: sessionValidation.message\n\t            }\n\t          }\n\t        },\n\n\t        'current_semester[session_id]': {\n\t          excluded: false,\n\t          validators: {\n\t            notEmpty: {message: 'You may only pick from the drop down list'}\n\t          }\n\t        }\n\t      }\n\t    }\n\t  );\n\n\t  var\n\t    $tr,\n\t    trBgColor;\n\n\t  $(document.body).on(\n\t    {\n\t      'click': function() {\n\t        var\n\t          $el = $(this),\n\t          data = JSON.parse($el.next().text());\n\n\t        $tr = $el.closest('tr');\n\t        trBgColor = $tr.css('background-color');\n\n\t        $tr.css('background-color', '#DAC3DB').siblings().css('background-color', trBgColor);\n\n\t        $('#current-semester-select-update-id').val(data.id);\n\t        $form.find('#number').val(String(data.number));\n\t        $form.find('#start_date').val(moment(data.start_date.date).format('DD-MM-YYYY'));\n\t        $form.find('#end_date').val(moment(data.end_date.date).format('DD-MM-YYYY'));\n\n\t        $form.show();\n\t      }\n\t    }, '.current-semester-select-update-trigger'\n\t  );\n\n\t  $('#current-semester-select-update-clear-btn').click(function() {\n\t    $tr.css('background-color', trBgColor);\n\t    $form.hide();\n\t  }\n\t  );\n\t})();\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\t/**\n\t *\n\t * @param {Array} source\n\t * @param {String} fieldToDisplay - the field from the source that will be set as value\n\t * of form control been auto-completed\n\t *\n\t * @returns {{minLength: number, source: Array, select: Function}}\n\t */\n\tfunction sessionSemesterAutoComplete(source, fieldToDisplay) {\n\t  return {\n\t    minLength: 1,\n\n\t    source: source,\n\n\t    select: function(evt, ui) {\n\t      var\n\t        $el = $(this),\n\t        $related = $($el.data('related-input-id'));\n\n\t      $related.val(ui.item.id);\n\n\t      if (evt.originalEvent.which === 1) {\n\t        window.setTimeout(function() {\n\t                            $el.val(ui.item[fieldToDisplay]);\n\t                          }\n\t        );\n\t      }\n\n\t      window.setTimeout(function() {\n\t                          $el.closest('form').formValidation('revalidateField', $el);\n\t                          $el.closest('form').formValidation('revalidateField', $related);\n\t                        }\n\t      );\n\n\t      return false;\n\t    }\n\t  };\n\t}\n\n\tmodule.exports = sessionSemesterAutoComplete\n\n\n/***/ }\n/******/ ]);"],"sourceRoot":"/source/"}
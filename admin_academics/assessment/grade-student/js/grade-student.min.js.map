{"version":3,"sources":["admin_academics/assessment/grade-student/js/grade-student.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","$modal","$","$modalBody","$studentQueryForm","click","show","tenMostRecentSemesters","JSON","parse","text","autocomplete","sessionSemesterAutoComplete","formValidation","fields","student-course-query[semester_id]","excluded","validators","notEmpty","message","resetExisting","$el","existingVal","data","val","updateRowWithLetterGrade","prop","siblings","hide","trim","scoreGrade","scoreToLetterGrade","score","grade","parent","next","Number","isNaN","_","find","scoreGradeMapping","minMax","min","max","toFixed","getFreshAndUpdatedGrades","newScore","oldScore","updated","grades","$courseScores","each","this","is","push","closest","clone","buildValidForm","$tdExistingScore","$scoreInputTd","$scoreInput","$children","$scoreInputValidForm","html","$tBody","$tr","index","children","first","filter","attr","remove","append","$table","lenGrades","length","coursesPluralize","studentRegNo","get","outerHTML","invalidFormMsg","$input","$form","resetField","row","selector","on","e","element","evt","preventDefault","modal","resetForm","source","fieldToDisplay","minLength","select","ui","$related","item","originalEvent","which","window","setTimeout"],"mappings":"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","file":"admin_academics/assessment/grade-student/js/grade-student.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint camelcase:false*/\r\n\r\n\t\"use strict\";\r\n\r\n\tvar $modal = $('#current-semester-form-modal')\r\n\tvar $modalBody = $('#current-semester-form-modal-body')\r\n\tvar $studentQueryForm = $('#student-course-query-form')\r\n\r\n\t$('.just-graded-courses-close').click(function() {\r\n\t  $studentQueryForm.show()\r\n\t});\r\n\r\n\t(function studentCourseQueryFrom() {\r\n\t  var tenMostRecentSemesters = JSON.parse($('#tenMostRecentSemesters-container').text());\r\n\r\n\t  $('#semester').autocomplete(\r\n\t    __webpack_require__(1).sessionSemesterAutoComplete(tenMostRecentSemesters, 'label')\r\n\t  );\r\n\r\n\t  $studentQueryForm.formValidation(\r\n\t    {\r\n\t      fields: {\r\n\t        'student-course-query[semester_id]': {\r\n\t          excluded: false,\r\n\t          validators: {\r\n\t            notEmpty: {message: 'You may only pick from the drop down list'}\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  );\r\n\t})();\r\n\r\n\t(function studentCourseScoreForm() {\r\n\t  var $courseScores = $('.course-score')\r\n\t  var invalidFormMsg = '<div class=\"modal-body-caption no-valid\">\\n' +\r\n\t                       '  No score was inputted or updated. You may not submit form!\\n' +\r\n\t                       '</div>';\r\n\t  var studentRegNo = $('#student-reg-number').text();\r\n\r\n\t  $('.course-score-edit-trigger').click(function() {\r\n\t    $(this).hide()\r\n\t      .siblings('.course-score').prop('disabled', false)\r\n\t      .siblings('.course-score-view-only-trigger').show();\r\n\t  });\r\n\r\n\t  $('.course-score-view-only-trigger').click(function() {\r\n\t    var $input = $(this).hide()\r\n\t      .siblings('.course-score').prop('disabled', true);\r\n\r\n\t    $form.data('formValidation').resetField($input);\r\n\t    resetExisting($input);\r\n\r\n\t    $input.siblings('.course-score-edit-trigger').show();\r\n\t  });\r\n\r\n\t  var scoreGradeMapping = JSON.parse($('#scoreGradeMapping-container').text());\r\n\r\n\t  var $form = $('#student-course-score-form').formValidation(\r\n\t    {\r\n\t      row: {\r\n\t        selector: 'td'\r\n\t      }\r\n\t    }\r\n\t  );\r\n\r\n\t  $form.on('success.field.fv', '.course-score', function(e, data) {\r\n\t    updateRowWithLetterGrade(data.element);\r\n\t  });\r\n\r\n\t  $form.on('success.form.fv', function(evt) {\r\n\t    evt.preventDefault();\r\n\t    var grades = getFreshAndUpdatedGrades();\r\n\r\n\t    if (grades.length === 0) {\r\n\t      $modalBody.html('');\r\n\t      $modalBody.html(invalidFormMsg);\r\n\r\n\t    } else {\r\n\t      $modalBody.html('');\r\n\t      $modalBody.append(buildValidForm(grades));\r\n\t    }\r\n\r\n\t    $modal.modal('show');\r\n\t    $form.data('formValidation').resetForm();\r\n\t  });\r\n\r\n\t  $('#student-course-score-form-reset-btn').click(function() {\r\n\t    $form.data('formValidation').resetForm();\r\n\r\n\t    $courseScores.each(function() {\r\n\t      var $el = $(this);\r\n\r\n\t      if ($el.is('.already-graded')) resetExisting($el);\r\n\r\n\t      else $el.val('').parent().siblings('.grade').text('');\r\n\t    });\r\n\t  });\r\n\r\n\t  /**\r\n\t   * Reset a row to score existing in the database if course for the row has been scored.\r\n\t   *\r\n\t   * @param {jQuery} $el\r\n\t   */\r\n\t  function resetExisting($el) {\r\n\t    var existingVal = $el.data('existing-score');\r\n\t    $el.val(existingVal);\r\n\r\n\t    if (existingVal) {\r\n\t      updateRowWithLetterGrade($el);\r\n\t      $el.prop('disabled', true)\r\n\t        .siblings('.course-score-view-only-trigger').hide()\r\n\t        .siblings('.course-score-edit-trigger').show();\r\n\t    }\r\n\t  }\r\n\r\n\t  /**\r\n\t   *\r\n\t   * @param {jQuery} $el\r\n\t   */\r\n\t  function updateRowWithLetterGrade($el) {\r\n\t    var val = $el.val().trim();\r\n\r\n\t    if (val) {\r\n\t      var scoreGrade = scoreToLetterGrade(val);\r\n\r\n\t      if (scoreGrade) {\r\n\t        var\r\n\t          score = scoreGrade[0],\r\n\t          grade = scoreGrade[1];\r\n\r\n\t        $el.val(score);\r\n\t        $el.parent().next().text(grade);\r\n\t      }\r\n\r\n\t    }\r\n\t  }\r\n\r\n\t  /**\r\n\t   *\r\n\t   * @param {String|number} score - student's score in course. Must be a number or numeric string\r\n\t   * @returns {Array|null}\r\n\t   */\r\n\t  function scoreToLetterGrade(score) {\r\n\t    score = Number(score);\r\n\r\n\t    if (isNaN(score)) {\r\n\t      return null;\r\n\t    }\r\n\r\n\t    var scoreGrade = _.find(scoreGradeMapping, function(minMax) {\r\n\t      var\r\n\t        min = minMax[0],\r\n\t        max = minMax[1];\r\n\r\n\t      return min <= score && score <= max;\r\n\t    });\r\n\r\n\t    score = score.toFixed(2);\r\n\t    return [score, scoreGrade ? scoreGrade[2] : 'F'];\r\n\t  }\r\n\r\n\t  function getFreshAndUpdatedGrades() {\r\n\t    var grades = [];\r\n\t    var $el, newScore, oldScore, updated;\r\n\r\n\t    $courseScores.each(function() {\r\n\t      $el = $(this);\r\n\t      newScore = $el.val().trim();\r\n\r\n\t      if ($el.is('.already-graded')) {\r\n\t        newScore = Number(newScore);\r\n\t        oldScore = Number($el.data('existing-score').trim());\r\n\t        updated = newScore !== oldScore;\r\n\r\n\t        if (updated) grades.push($el.closest('tr').clone());\r\n\r\n\t      } else {\r\n\t        if (newScore) grades.push($el.closest('tr').clone());\r\n\t      }\r\n\t    });\r\n\r\n\t    return grades;\r\n\t  }\r\n\r\n\t  /**\r\n\t   *\r\n\t   * @param {Object} grades\r\n\t   */\r\n\t  function buildValidForm(grades) {\r\n\t    var $scoreInputValidForm = $($('#scores-input-valid-form-template').html());\r\n\t    var $tdExistingScore, $scoreInputTd, $scoreInput, $children;\r\n\r\n\t    var $tBody = $scoreInputValidForm.find('tbody');\r\n\r\n\t    _.each(grades, function($tr, index) {\r\n\t      $children = $tr.children();\r\n\r\n\t      $children.first().text(index + 1);\r\n\r\n\t      $scoreInputTd = $children.filter('.fresh-score');\r\n\t      $scoreInput = $scoreInputTd.children('.course-score').attr('type', 'hidden');\r\n\t      $scoreInput.siblings().remove();\r\n\t      $scoreInputTd.append($scoreInput.val());\r\n\r\n\t      $tdExistingScore = $children.filter('.td-existing-score');\r\n\r\n\t      if ($tdExistingScore.is('.already-graded-td')) $tdExistingScore.text($tdExistingScore.children().val());\r\n\t      else $tdExistingScore.text('');\r\n\r\n\t      $tBody.append($tr);\r\n\t    });\r\n\r\n\t    var $table = $scoreInputValidForm.children('table').clone();\r\n\r\n\t    var lenGrades = grades.length;\r\n\t    var coursesPluralize = 'course' + (lenGrades > 1 ? 's' : '');\r\n\r\n\t    $table.children('caption').text(\r\n\t      lenGrades + ' ' + coursesPluralize + ' newly graded/updated for student registration number \"' + studentRegNo + '\"'\r\n\t    );\r\n\t    $scoreInputValidForm\r\n\t      .find('#student-score-table-text')\r\n\t      .val($table.get(0).outerHTML);\r\n\r\n\t    return $scoreInputValidForm;\r\n\t  }\r\n\t})();\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.sessionSemesterAutoComplete = __webpack_require__(2)\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\t/**\n\t *\n\t * @param {Array} source\n\t * @param {String} fieldToDisplay - the field from the source that will be set as value\n\t * of form control been auto-completed\n\t *\n\t * @returns {{minLength: number, source: Array, select: Function}}\n\t */\n\tfunction sessionSemesterAutoComplete(source, fieldToDisplay) {\n\t  return {\n\t    minLength: 1,\n\n\t    source: source,\n\n\t    select: function(evt, ui) {\n\t      var\n\t        $el = $(this),\n\t        $related = $($el.data('related-input-id'));\n\n\t      $related.val(ui.item.id);\n\n\t      if (evt.originalEvent.which === 1) {\n\t        window.setTimeout(function() {\n\t                            $el.val(ui.item[fieldToDisplay]);\n\t                          }\n\t        );\n\t      }\n\n\t      window.setTimeout(function() {\n\t                          $el.closest('form').formValidation('revalidateField', $el);\n\t                          $el.closest('form').formValidation('revalidateField', $related);\n\t                        }\n\t      );\n\n\t      return false;\n\t    }\n\t  };\n\t}\n\n\tmodule.exports = sessionSemesterAutoComplete\n\n\n/***/ }\n/******/ ]);"],"sourceRoot":"/source/"}